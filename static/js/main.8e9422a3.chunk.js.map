{"version":3,"sources":["actionTypes.js","Post.js","EditPost.js","AllPost.js","PostForm.js","App.js","Reducers/postReducer.js","index.js"],"names":["editPost","id","type","Post","handleDelete","e","preventDefault","props","dispatch","post","handleEdit","className","this","title","desc","onClick","Component","connect","EditPost","data","value","updatePost","handleCancel","onSubmit","required","placeholder","ref","input","defaultValue","rows","cols","AllPost","posts","map","key","isEdit","state","PostForm","handleSubmit","Date","addPost","App","postReducer","action","concat","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e9422a3.chunk.js","sourcesContent":["export function addPost(data) {\r\n    return {\r\n        type: 'ADD_POST',\r\n        data\r\n    }\r\n}\r\n\r\nexport function deletePost(id) {\r\n    return {\r\n        type: 'DELETE_POST',\r\n        id\r\n    }\r\n}\r\n\r\nexport function editPost(id) {\r\n    return {\r\n        type: 'EDIT_POST',\r\n        id\r\n    }\r\n}\r\n\r\nexport function updatePost(id, data) {\r\n    return {\r\n        type: 'UPDATE_POST',\r\n        id,\r\n        data\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {deletePost, editPost} from './actionTypes';\r\n\r\nclass Post extends Component {\r\n    handleDelete = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(deletePost(this.props.post.id));\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(editPost(this.props.post.id));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"post\">\r\n                <h2 className=\"post_title\">{this.props.post.title}</h2>\r\n                <p className=\"post_message\">{this.props.post.desc}</p>\r\n                <div className=\"control-buttons\">\r\n                    <button className=\"edit\" onClick={this.handleEdit}>Edit</button>\r\n                    <button className=\"delete\" onClick={this.handleDelete}>Delete</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Post);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {editPost, updatePost} from './actionTypes';\r\n\r\nclass EditPost extends Component {\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        const id = this.props.post.id;\r\n        const data = {\r\n            title: this.title.value,\r\n            desc: this.desc.value\r\n        };\r\n        //console.log(data); \r\n\r\n        this.props.dispatch(updatePost(id,data));\r\n\r\n        this.title.value='';\r\n        this.desc.value='';\r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(editPost(this.props.post.id));\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"post\">\r\n                <form className=\"form\" onSubmit={this.handleEdit}>\r\n                    <input type=\"text\" required placeholder=\"Enter post title\"\r\n                        ref={(input)=>this.title = input}\r\n                        defaultValue={this.props.post.title} />\r\n                    <br />\r\n                    <textarea rows=\"5\" cols=\"10\" required placeholder=\"Enter description\"\r\n                        ref={(input)=>this.desc=input}\r\n                        defaultValue={this.props.post.desc} />\r\n                    <br />\r\n                    <button>Save</button>\r\n                    <button onClick={this.handleCancel}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(EditPost);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Post from './Post';\r\nimport EditPost from './EditPost';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state\r\n    }\r\n}\r\n\r\nclass AllPost extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1 className=\"post_heading\">All Post</h1>\r\n                {\r\n                this.props.posts.map(\r\n                    (post) => \r\n                        <div key={post.id}>\r\n                            {\r\n                                post.isEdit ?\r\n                                <EditPost key={post.id} post={post} /> \r\n                                : <Post key={post.id} post={post} />\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AllPost);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addPost} from './actionTypes';\r\n\r\nclass PostForm extends Component {\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const data = {\r\n            id: new Date(),\r\n            title: this.title.value,\r\n            desc: this.desc.value,\r\n            isEdit:false\r\n        };\r\n        //console.log(data); \r\n\r\n        this.props.dispatch(addPost(data));\r\n\r\n        this.title.value='';\r\n        this.desc.value='';\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"post-container\">\r\n                <h1 className=\"post_heading\">Create Post</h1>\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" required placeholder=\"Enter post title\"\r\n                        ref={(input)=>this.title = input} />\r\n                    <br />\r\n                    <textarea rows=\"5\" cols=\"10\" required placeholder=\"Enter description\"\r\n                        ref={(input)=>this.desc=input} />\r\n                    <br />\r\n                    <button>Post</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(PostForm);\r\n","import React from 'react';\nimport AllPost from './AllPost';\nimport PostForm from './PostForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <h2 className=\"center \">Post It</h2>\n      </div>\n      <PostForm />\n      <AllPost />\n    </div>\n  );\n}\n\nexport default App;\n","const postReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'ADD_POST':\r\n            return state.concat([action.data]);\r\n        case 'DELETE_POST':\r\n            return state.filter((post)=> post.id !== action.id);\r\n        case 'EDIT_POST':\r\n            return state.map((post)=> post.id === action.id ? {...post,isEdit:!post.isEdit} : post);\r\n        case 'UPDATE_POST':\r\n            return state.map((post) => {\r\n                if(post.id === action.id) {\r\n                    return {\r\n                        ...post,\r\n                        title:action.data.title,\r\n                        desc:action.data.desc,\r\n                        isEdit: !post.isEdit\r\n                    }\r\n                }\r\n                else \r\n                    return post;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from 'redux';\nimport postReducer from './Reducers/postReducer';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(postReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\n\n"],"sourceRoot":""}